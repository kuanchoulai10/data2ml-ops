apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.minio.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.minio.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.minio.name }}
    spec:
      containers:
        - name: {{ .Values.minio.name }}
          image: minio/minio
          args:
            - server
            - /data
            - --console-address
            - :{{ .Values.minio.console_port }}
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.root_user }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.minio.root_password }}
          ports:
            - containerPort: {{ .Values.minio.api_port }}
              protocol: TCP
            - containerPort: {{ .Values.minio.console_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: {{ .Values.minio.api_port }}
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 15
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: {{ .Values.minio.api_port }}
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          volumeMounts:
            - name: storage
              mountPath: {{ .Values.minio.mount_path }}
      volumes:
        - name: storage
          hostPath:
            path: {{ .Values.minio.host_path }}
            type: DirectoryOrCreate
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.minio.name }}
spec:
  selector:
    app: {{ .Values.minio.name }}
  type: NodePort
  ports:
    - name: api
      port: {{ .Values.minio.api_port }}
      targetPort: {{ .Values.minio.api_port }}
      nodePort: 30900
    - name: console
      port: {{ .Values.minio.console_port }}
      targetPort: {{ .Values.minio.console_port }}
      nodePort: 30901
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-create-bucket
spec:
  backoffLimit: 6
  completions: 1
  template:
    metadata:
      labels:
        job: minio-create-bucket
    spec:
      initContainers:
        - name: wait-for-minio
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z {{ .Values.minio.name }} {{ .Values.minio.api_port }}; do
                echo "Waiting for minio..."
                sleep 2
              done
              echo "MinIO is ready!"
      containers:
        - name: minio-create-bucket
          image: minio/mc
          command:
            - sh
            - -c
            - |
              mc alias set minio http://{{ .Values.minio.name }}:{{ .Values.minio.api_port }} {{ .Values.minio.root_user }} {{ .Values.minio.root_password }} &&
              if ! mc ls minio/{{ .Values.minio.bucket_name }}; then
                mc mb minio/{{ .Values.minio.bucket_name }}
              else
                echo "Bucket already exists"
              fi
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 30