apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mlflow.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.mlflow.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mlflow.name }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z {{ .Values.postgres.name }} {{ .Values.postgres.port }}; do
                echo "Waiting for postgres..."
                sleep 2
              done
              echo "Postgres is ready!"
        - name: wait-for-minio
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z {{ .Values.minio.name }} {{ .Values.minio.api_port }}; do
                echo "Waiting for minio..."
                sleep 2
              done
              echo "MinIO is ready!"
      containers:
        - name: {{ .Values.mlflow.name }}
          image: bitnami/mlflow:latest
          env:
            - name: MLFLOW_S3_ENDPOINT_URL
              value: http://{{ .Values.minio.name }}:{{ .Values.minio.api_port }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.minio.root_user }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.minio.root_password }}
            - name: MLFLOW_S3_IGNORE_TLS
              value: "true"
          command: ["mlflow"]
          args:
            [
              "server",
              "--backend-store-uri", "postgresql://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@{{ .Values.postgres.name }}:{{ .Values.postgres.port }}/{{ .Values.postgres.db }}",
              "--artifacts-destination", "s3://{{ .Values.minio.bucket_name }}",
              "--host", "{{ .Values.mlflow.host }}",
              "--port", "{{ .Values.mlflow.port }}",
            ]
          ports:
            - containerPort: {{ .Values.mlflow.port }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mlflow.name }}
spec:
  type: NodePort
  selector:
    app: {{ .Values.mlflow.name }}
  ports:
    - port: {{ .Values.mlflow.port }}
      targetPort: {{ .Values.mlflow.port }}
      nodePort: 30500
